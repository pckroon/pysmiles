# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: test package

on:
  push:
    branches: [ master ]
  pull_request:

env:
  SKIP_GENERATE_AUTHORS: 1
  SKIP_WRITE_GIT_CHANGELOG: 1

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
       py_version: ["3.8", "3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.py_version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.py_version }}
    - name: Install dependencies
      run: |
        pip install --upgrade setuptools pip
    - name: Install package and requirements
      run: |
        pip install --upgrade .
        pip install -r requirements-tests.txt
    - name: Run pytest with codecoverage
      run: |
        coverage run --source=pysmiles $(which pytest) --hypothesis-show-statistics
        coverage report
        coveralls

  lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.11
    - name: Install dependencies
      run: |
        pip install --upgrade setuptools pip
        pip install -r requirements-tests.txt
        pip install --upgrade .
    - name: Run pylint
      run: |
         pylint --disable=fixme --fail-under=8.0 pysmiles tests

  deploy:
    needs: [build, lint]
    runs-on: ubuntu-latest
    environment:
      name: testpypi
      url: https://test.pypi.org/p/vermouth
    permissions:
      id-token: write
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-tags: true
        fetch-depth: 0
    - name: Set up Python 3
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: pip
        cache-dependency-path: |
          **/setup.cfg
          **/requirements-*.txt
          **/pyproject.toml
    - name: Install dependencies
      run: |
        pip install --upgrade setuptools pip
        pip install --upgrade .
    - name: Install pypa/build
      run: |
        python3 -m pip install build pbr --user
    - name: Build a binary wheel and a source tarball
      run: python3 -m build --sdist --wheel --outdir dist/
    - name: Publish distribution ðŸ“¦ to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
